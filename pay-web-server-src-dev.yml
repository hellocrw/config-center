server:
  port: 9001  # 端口
  servlet:
    context-path: /pay-web

spring:
  application:
    name: pay-web-server-src  # 实例名称

# =======数据源配置=========
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: root
    password: hellocrw.1103
    url: jdbc:mysql://8.129.110.202:3306/pay_web_v1_0?characterEncoding=utf-8&useSSL=true&serverTimezone=Asia/Shanghai
    type: com.alibaba.druid.pool.DruidDataSource
    #   数据源其他配置
    initialSize: 5
    minIdle: 5
    maxActive: 20
    #    配置获取连接等待超时的时间
    maxWait: 60000
    #    配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位毫秒
    timeBetweenEvictionRunsMillis: 60000
    #    配置一个连接在池中最小生存的时间，单位毫秒
    minEvictableIdleTimeMillis: 300000
    validationQuery: SELECT 1 FROM DUAL
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    #   打开PSCache，并且指定每个连接上PSCache的大小
    poolPreparedStatements: true
    maxPoolPreparedStatementPerConnectionSize: 20
    #   配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    useGlobalDataSourceStat: true
    #   通过connectProperties属性来打开mergeSql功能；慢SQL记录
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500
    #   配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    filters: stat,wall

  # 邮件配置
  mail:
    host: smtp.qq.com
    protocol: smtp
    default-encoding: UTF-8
    username: 1121754955@qq.com
    password: rieitzssoohbjidh
    test-connection: true
    properties:
      mail:
        smtp:
          auth: true
          socketFactory:
            port: 465
            class: javax.net.ssl.SSLSocketFactory
            fallback: false
          starttls:
            enable: true
            required: true
    port: 465

# =====jwt config=====
config:
  jwt:
    # 加密密钥
    secret: secret
    # token有效时长，单位秒
    expire: 3600
    # header 名称
    headerKey: token
    token: Authorization
    # token放行，配置uri请求不用token认证，用","号隔开
    release_uri: /login,/register,/pay-web

mybatis-plus:
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl

file:
  upload:
    url: /crw
  output:
    url: /root/nginx/www/files/
